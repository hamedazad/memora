# Generated by Django 5.2.4 on 2025-08-09 08:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('memory_assistant', '0014_memory_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='memory',
            name='allow_comments',
            field=models.BooleanField(default=True, help_text='Allow comments on this memory'),
        ),
        migrations.AddField(
            model_name='memory',
            name='allow_likes',
            field=models.BooleanField(default=True, help_text='Allow likes/reactions on this memory'),
        ),
        migrations.AddField(
            model_name='memory',
            name='privacy_level',
            field=models.CharField(choices=[('private', 'Private - Only me'), ('friends', 'Friends Only'), ('organization', 'Organization Members'), ('public', 'Public')], default='private', help_text='Who can see this memory', max_length=20),
        ),
        migrations.AddField(
            model_name='memory',
            name='shared_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this memory has been shared'),
        ),
        migrations.CreateModel(
            name='MemoryComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Comment content', max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='memory_assistant.memory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('friend_request', 'Friend Request'), ('friend_accepted', 'Friend Request Accepted'), ('memory_shared', 'Memory Shared'), ('memory_comment', 'Memory Comment'), ('memory_like', 'Memory Like'), ('org_invitation', 'Organization Invitation'), ('org_joined', 'Organization Joined'), ('org_memory_shared', 'Organization Memory Shared')], max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField(max_length=300)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('action_url', models.CharField(blank=True, max_length=200)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Organization name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Organization description', max_length=1000)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organization_logos/')),
                ('website', models.URLField(blank=True)),
                ('org_type', models.CharField(choices=[('company', 'Company'), ('team', 'Team'), ('project', 'Project'), ('community', 'Community'), ('family', 'Family'), ('other', 'Other')], default='company', max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public - Anyone can join'), ('invite_only', 'Invite Only'), ('private', 'Private')], default='invite_only', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Brief description about yourself', max_length=500)),
                ('avatar', models.ImageField(blank=True, help_text='Profile picture', null=True, upload_to='avatars/')),
                ('location', models.CharField(blank=True, help_text='Your location', max_length=100)),
                ('website', models.URLField(blank=True, help_text='Personal website or social media')),
                ('privacy_level', models.CharField(choices=[('public', 'Public'), ('friends', 'Friends Only'), ('private', 'Private')], default='friends', help_text='Default privacy level for memories', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, help_text='Optional message with request', max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_friend_requests', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_friend_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('from_user', 'to_user')},
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendships_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendships_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='MemoryLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('like', 'üëç Like'), ('love', '‚ù§Ô∏è Love'), ('laugh', 'üòÇ Funny'), ('wow', 'üòÆ Wow'), ('sad', 'üò¢ Sad'), ('angry', 'üò† Angry')], default='like', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='memory_assistant.memory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('memory', 'user')},
            },
        ),
        migrations.CreateModel(
            name='OrganizationInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member'), ('viewer', 'Viewer')], default='member', max_length=20)),
                ('message', models.TextField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_org_invitations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='memory_assistant.organization')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_org_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('organization', 'to_user')},
            },
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member'), ('viewer', 'Viewer')], default='member', max_length=20)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='memory_assistant.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('organization', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SharedMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_type', models.CharField(choices=[('user', 'Shared with User'), ('organization', 'Shared with Organization'), ('public', 'Public Share')], max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional message when sharing', max_length=200)),
                ('can_reshare', models.BooleanField(default=False, help_text='Allow recipient to reshare this memory')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='memory_assistant.memory')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_memories', to=settings.AUTH_USER_MODEL)),
                ('shared_with_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_memories', to='memory_assistant.organization')),
                ('shared_with_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_shared_memories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('shared_with_user__isnull', False)), fields=('memory', 'shared_with_user'), name='unique_user_share'), models.UniqueConstraint(condition=models.Q(('shared_with_organization__isnull', False)), fields=('memory', 'shared_with_organization'), name='unique_org_share')],
            },
        ),
    ]
